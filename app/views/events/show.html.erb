<h1><%= @event.title %></h1>

<p><strong>Description:</strong> <%= @event.description %></p>
<p><strong>Start Time:</strong> <%= @event.start_time %></p>
<p><strong>Duration:</strong> <%= @event.duration %> hours</p>
<p><strong>Location Name:</strong> <%= @event.location_name %></p>
<p><strong>Location Coordinates:</strong> <%= @event.location_coordinates %></p>
<p><strong>Status:</strong> <%= @event.status %></p>
<h5>Participants:</h5>
<% @user_events_participators.each do |user_event| %>
  <p><%= user_event.user.profile.first_name %> <%= user_event.user.profile.last_name %>
  <%= user_event.user.profile.class_name %>-<%= user_event.user.profile.school %>-<%= user_event.user.profile.major %></p>
  <!-- Display other participant information as needed -->
<% end %>

<% if current_user %>
  <div class="event-actions">
    <% if @event.active? && !current_user.joined_event?(@event) && !current_user.hold_event?(@event)  %>
      <%= link_to 'Join Event', join_event_path(@event), method: :post, class: 'btn btn-primary' %>
    <% end %>

    <% if @event.active? && current_user.joined_event?(@event) && !current_user.hold_event?(@event)  %>
      <%= link_to 'Leave Event', leave_event_path(@event), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger' %>
    <% end %>

    <% if @event.active? && !current_user.joined_event?(@event) && current_user.hold_event?(@event)  %>
      <%= link_to 'Cancel Event', cancel_event_path(@event), method: :patch, data: { confirm: 'Are you sure?' }, class: 'btn btn-warning' %>
    <% end %>
  </div>
<% end %>

<%= link_to 'Back', events_path, class: 'btn btn-secondary' %>

<div id="map" style="height: 400px; width: 100%;"></div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  let map;

  window.initMap = function() {
    const eventCoordinates = getEventCoordinates();

    map = new google.maps.Map(document.getElementById('map'), {
      center: eventCoordinates,
      zoom: 15
    });

    new google.maps.Marker({
      position: eventCoordinates,
      map: map
    });
  };

  function getEventCoordinates() {
    // Parse coordinates from @event.location_coordinates
    const coords = "<%= @event.location_coordinates %>".split(",");
    return new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1]));
  }
});
</script>

<%= javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_API_KEY']}&callback=initMap", async: true, defer: true %>

